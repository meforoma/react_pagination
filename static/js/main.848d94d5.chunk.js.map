{"version":3,"sources":["components/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","props","pagesArr","onPageChange","currentPage","pages","className","type","name","disabled","onClick","map","page","toString","App","state","totalItems","perPage","setPage","event","currentTarget","setState","handleChange","target","value","this","Math","ceil","Object","keys","Array","fill","x","Number","showingLiteral","min","max","placeholder","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAOaA,EAAa,SAACC,GACzB,IACEC,EAEED,EAFFC,SAAUC,EAERF,EAFQE,aACVC,EACEH,EADFG,YAAaC,EACXJ,EADWI,MAGf,OACE,mCACE,qBAAK,aAAW,0BAAhB,SACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAU,YAAd,SACE,wBACEC,KAAK,SACLC,KAAK,WACLF,UAAU,YACVG,SAA0B,IAAhBL,EACVM,QAASP,EALX,SAOG,SAIJD,EAASS,KAAI,SAACC,GAAD,OACZ,oBAEEN,UAAU,YAFZ,SAIE,wBACEC,KAAK,SACLC,KAAMI,EAAKC,WACXP,UAAU,YACVI,QAASP,EAJX,SAMGS,KATEA,MAcT,oBAAIN,UAAU,YAAd,SACE,wBACEC,KAAK,SACLC,KAAK,OACLF,UAAU,YACVG,SAAUL,IAAgBC,EAC1BK,QAASP,EALX,SAOG,iBC1CTW,E,4MACJC,MAAQ,CACNC,WAAY,GACZC,QAAS,EACTb,YAAa,G,EAGfc,QAAU,SAACV,GACT,OAAKA,GACKA,EAIR,EAAKO,MAAMX,aACC,aAATI,GAAuB,EAAI,I,EAIlCL,aAAe,SAACgB,GACd,IAAQX,EAASW,EAAMC,cAAfZ,KAER,EAAKa,UAAS,SAAAN,GAAK,kCACdA,GADc,IAEjBX,YAAa,EAAKc,QAAQV,S,EAI9Bc,aAAe,SAACH,GACd,MAAwBA,EAAMI,OAAtBC,EAAR,EAAQA,MAAOhB,EAAf,EAAeA,KAEf,EAAKa,UAAS,SAAAN,GAAK,kCACdA,GADc,kBAEhBP,EAAOgB,Q,4CAIZ,WACE,MAGIC,KAAKV,MAFPC,EADF,EACEA,WAAYC,EADd,EACcA,QACZb,EAFF,EAEEA,YAGIC,EAAQqB,KAAKC,KAAKX,GAAcC,GAAW,IAC3Cf,EAAW0B,OAAOC,KAAKC,MAAMzB,GAAO0B,KAAK,IAC5CpB,KAAI,SAAAqB,GAAC,OAAIC,OAAOD,GAAK,KAClBE,EAAiB,WAAI9B,EAAc,GAAKa,EAAU,GAAjC,WACfS,KAAKS,IAAI/B,EAAca,EAASD,IADjB,cAEZA,GAEX,OACE,qCACE,+CAEE,uBACET,KAAK,SACLiB,MAAOR,EACPoB,IAAK,IACLD,IAAK,EACLE,YAAY,cACZ7B,KAAK,aACL8B,SAAUb,KAAKH,kBAInB,kDAEE,uBACEf,KAAK,SACLiB,MAAOP,EACPmB,IAAKpB,EACLmB,IAAK,EACLE,YAAY,yBACZ7B,KAAK,UACL8B,SAAUb,KAAKH,kBAGnB,uBACA,+CAAgBY,EAAhB,kBAAwC9B,EAAxC,OAEA,cAAC,EAAD,2BACMqB,KAAKV,OADX,IAEEb,SAAUA,EACVG,MAAOA,EACPF,aAAcsB,KAAKtB,uB,GAnFXoC,IAAMC,WA2FT1B,ICnGf2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.848d94d5.chunk.js","sourcesContent":["type Props = {\n  currentPage: number,\n  pagesArr: number[],\n  onPageChange: (event: React.MouseEvent<HTMLButtonElement>) => void,\n  pages: number,\n};\n\nexport const Pagination = (props: Props) => {\n  const {\n    pagesArr, onPageChange,\n    currentPage, pages,\n  } = props;\n\n  return (\n    <>\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination\">\n          <li className=\"page-item\">\n            <button\n              type=\"button\"\n              name=\"previous\"\n              className=\"page-link\"\n              disabled={currentPage === 1}\n              onClick={onPageChange}\n            >\n              {'<<'}\n            </button>\n          </li>\n\n          {pagesArr.map((page: number) => (\n            <li\n              key={page}\n              className=\"page-item\"\n            >\n              <button\n                type=\"button\"\n                name={page.toString()}\n                className=\"page-link\"\n                onClick={onPageChange}\n              >\n                {page}\n              </button>\n            </li>\n          ))}\n\n          <li className=\"page-item\">\n            <button\n              type=\"button\"\n              name=\"next\"\n              className=\"page-link\"\n              disabled={currentPage === pages}\n              onClick={onPageChange}\n            >\n              {'>>'}\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\ntype State = {\n  totalItems: number,\n  perPage: number,\n  currentPage: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    totalItems: 42,\n    perPage: 5,\n    currentPage: 1,\n  };\n\n  setPage = (name: string) => {\n    if (+name) {\n      return +name;\n    }\n\n    return (\n      this.state.currentPage\n      + (name === 'previous' ? -1 : 1)\n    );\n  };\n\n  onPageChange = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const { name } = event.currentTarget;\n\n    this.setState(state => ({\n      ...state,\n      currentPage: this.setPage(name),\n    }));\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  render() {\n    const {\n      totalItems, perPage,\n      currentPage,\n    } = this.state;\n\n    const pages = Math.ceil(totalItems / (perPage || 5));\n    const pagesArr = Object.keys(Array(pages).fill(1))\n      .map(x => Number(x) + 1);\n    const showingLiteral = `${(currentPage - 1) * perPage + 1}`\n      + `-${Math.min(currentPage * perPage, totalItems)}`\n      + ` of ${totalItems}`;\n\n    return (\n      <>\n        <div>\n          Total items:\n          <input\n            type=\"number\"\n            value={totalItems}\n            max={900}\n            min={1}\n            placeholder=\"total items\"\n            name=\"totalItems\"\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div>\n          Items per page:\n          <input\n            type=\"number\"\n            value={perPage}\n            max={totalItems}\n            min={1}\n            placeholder=\"per page (default = 5)\"\n            name=\"perPage\"\n            onChange={this.handleChange}\n          />\n        </div>\n        <br />\n        <p>{`Showing: ${showingLiteral} (page ${currentPage})`}</p>\n\n        <Pagination\n          {...this.state}\n          pagesArr={pagesArr}\n          pages={pages}\n          onPageChange={this.onPageChange}\n        />\n\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}